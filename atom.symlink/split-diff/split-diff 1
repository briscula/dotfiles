function GloboPage() {
  const self = this
  const helper = {
    treatCallback(element, callback) {
      if (typeof callback !== 'undefined') {
        callback(element)
      }
    },
    waitForFinish(element, callback) {
      const self = this
      element.addEventListener('load', () => {
        self.treatCallback(element, callback)
      })
    },
  }

  this.initialize = function () {
    this.loadMedias()
    this.loadCSSs()
    this.loadScripts()
  }

  this.loadCSSs = function (callback) {
    const links = document.querySelectorAll('link[data-src]')
    self.load(links, 'href', callback)
  }

  this.loadScripts = function (callback) {
    const scripts = document.querySelectorAll('script[data-src]')
    self.load(scripts, 'src', callback)
  }

  this.loadMedias = function () {
    this.loadImages()
    this.loadGifs()
  }

  this.loadImages = function (callback) {
    const images = document.querySelectorAll('.progressive-img picture')
    for (let i = images.length - 1; i >= 0; i--) {
      window.ScrollSpy.add({
        el: images[i].parentNode,
        offset: 800,
        callback(element, ev) {
          const pictureTag = element.querySelectorAll('picture')[0]
          const sources = pictureTag.querySelectorAll('source')
          const defaultImage = pictureTag.querySelectorAll('img')
          if (defaultImage.length) {
            self.load(defaultImage, 'src', self.onLoadImages)
          }
          self.load(sources, 'srcset')
        },
      })
    }
  }

  this.loadGifs = function (callback) {
    const gifs = document.querySelectorAll('.content-media__gif-container')
    for (let i = gifs.length - 1; i >= 0; i--) {
      window.ScrollSpy.add({
        el: gifs[i],
        offset: 800,
        callback(element, ev) {
          let gif_player = element.querySelectorAll('.content-media__gif-container__gif-player')[0],
            placeholder_image = element.querySelectorAll('.content-media__gif-container__gif-placeholder')[0],
            sources = element.querySelectorAll('source')
          self.load(sources, 'src')
          gif_player.load()
          gif_player.addEventListener('loadeddata', () => {
            placeholder_image.style.display = 'none'
          }, false)
        },
      })
    }
  }

  this.onLoadImages = function (element) {
    element.classList.add('progressive-loaded')
  }

  this.load = function (elements, attribute, callback) {
    if (elements.length === 0) {
      helper.treatCallback(callback)
    }

    for (let i = 0; i < elements.length; i++) {
      (function treatElement(i) {
        let element = elements[i],
          value = element.getAttribute('data-src')
        element.setAttribute(attribute, value)
        helper.waitForFinish(element, callback)
      }(i))
    }
  }

  this.initialize()
}

const globoPage = new GloboPage()
